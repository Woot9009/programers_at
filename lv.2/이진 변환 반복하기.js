/*
0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.

x의 모든 0을 제거합니다.
x의 길이를 c라고 하면, x를 "c를 2진법으로 표현한 문자열"로 바꿉니다.
예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.

0과 1로 이루어진 문자열 s가 매개변수로 주어집니다.
s가 "1"이 될 때까지 계속해서 s에 이진 변환을 가했을 때,
이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.

s의 길이는 1 이상 150,000 이하입니다.
s에는 '1'이 최소 하나 이상 포함되어 있습니다.
*/

function solution(s) {
  let length1 = 0;
  let cnt0 = 0;
  let cnt2 = 0;
  let num = 0;
  
  while (s.length > 1){
      for (let i=0; i<s.length; i++) {
          s[i] == '1' ? length1++ : cnt0++;
      }
      s = String(length1.toString(2));
      length1 = 0;
      cnt2 ++;
  }
  
  return [cnt2, cnt0];
}

/*
num.toString(n진법으로) & parseInt(num,n진법에서)

1. x의 길이 변수선언, 제거한 0의 갯수를 셀 숫자 변수선언, 이진변환 횟수 셀 숫자 변수선언
2. while(s !== '1'){}로 아래 반복
  2-1. for문으로 s를 순회하면서 1번의 변수 갱신
  2-2. 문자변수.length를 parseInt(,2)로 2진법 변환하고 이를 s에 넣음
  2-3. 문자변수 비우고 변환횟수 += 1 하면서 반복
3. answer = [변환횟수, 0갯수];
*/